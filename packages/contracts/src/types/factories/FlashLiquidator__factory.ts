/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  FlashLiquidator,
  FlashLiquidatorInterface,
} from "../FlashLiquidator";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "notional_",
        type: "address",
        internalType: "contract NotionalProxy",
      },
      {
        name: "weth_",
        type: "address",
        internalType: "address",
      },
      {
        name: "owner_",
        type: "address",
        internalType: "address",
      },
      {
        name: "tradingModule_",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "NOTIONAL",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract NotionalProxy",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "TRADING_MODULE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ITradingModule",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "WETH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract WETH9",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approveTokens",
    inputs: [
      {
        name: "tokens",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "callback",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "paymentReceiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "asset",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "fee",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "params",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "enableCurrencies",
    inputs: [
      {
        name: "currencies",
        type: "uint16[]",
        internalType: "uint16[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "flashLoan",
    inputs: [
      {
        name: "flashLenderWrapper",
        type: "address",
        internalType: "address",
      },
      {
        name: "asset",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "params",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "localAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "collateralAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "flashLoanResidual",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "localProfit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "collateralProfit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getFreeCollateral",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "",
        type: "int256[]",
        internalType: "int256[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ifCashCurrencyId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "wrapToWETH",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class FlashLiquidator__factory {
  static readonly abi = _abi;
  static createInterface(): FlashLiquidatorInterface {
    return new utils.Interface(_abi) as FlashLiquidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashLiquidator {
    return new Contract(address, _abi, signerOrProvider) as FlashLiquidator;
  }
}
